name: bootstrap

on: [push, pull_request]

jobs: 
  bootstrap: 
    runs-on: ubuntu-latest 
    env:
      HUGO_VERSION: "0.104.3"
    name: bootstrap 
    permissions:
      pages: write
      id-token: write
    steps: 
      - name: Check out source repository 
        with:
          # checkout full tree
          fetch-depth: 0
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0 
      - name: Set up Python environment 
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0 
        with: 
          python-version: "3.9" 
      - name: Install sumologic/pandas 
        run: pip install sumologic-sdk==0.1.13 pandas tabulate
      - name: Run python file on path 
        run: python3 ./script/test.py
      - name: create markdown file 
        run: | 
          mkdir $GITHUB_WORKSPACE/pages
          cat fer.md > $GITHUB_WORKSPACE/pages/FER.md 
          rm fer.md 
          ls -R $GITHUB_WORKSPACE
          git config user.name "test"
          git add $GITHUB_WORKSPACE/pages/FER.md
          git commit -m 'refreshed fields.md'
          git push origin
  # build:
  #   runs-on: ubuntu-latest
  #   needs: bootstrap
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Build with Jekyll
  #       uses: actions/jekyll-build-pages@v1
  #       with:
  #         source: ./
  #         destination: ./_site
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2

  # # Deployment job
  # deploy:
  #   permissions:
  #       pages: write
  #       id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2


  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
  #       with:
  #         fetch-depth: 0
  #     # Setup Hugo
  #     - run: mkdir -p deb
  #     - name: Cache hugo
  #       id: cache-hugo
  #       uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
  #       with:
  #         path: deb
  #         key: hugo-${{ env.HUGO_VERSION }}
  #     - name: Download hugo
  #       if: steps.cache-hugo.outputs.cache-hit != 'true'
  #       run: curl -sL "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb" -o hugo.deb
  #       working-directory: deb
  #       env:
  #         HUGO_VERSION: ${{ env.HUGO_VERSION }}
  #     - name: Install Hugo
  #       run: |
  #         sudo apt install hugo
  #         hugo version
  #       working-directory: deb

  #     # create pages
  #     - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
  #       with:
  #         go-version: '1.21'
  #     # - name: Generate GitHub pages
  #     #   run: go run ./go/cmd/render/

  #     # # build site
  #     # - uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
  #     #   with:
  #     #     node-version: 16
  #     #     cache: 'npm'
  #     #     cache-dependency-path: 'pages/package-lock.json'
  #     # - name: Generate documentation
  #     #   run: |
  #     #     npm install
  #     #     npm install -g postcss postcss-cli autoprefixer
  #     #     hugo
  #     #   working-directory: pages

  #     - name: Upload pages artifact
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #       uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
  #       with:
  #         name: pages
  #         path: pages/

  # documentation:
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   needs: [ build_pages ]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #     - name: Download pages artifact
  #       uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
  #       with:
  #         name: pages
  #         path: pages/

  #     # deploy to github pages
  #     - name: Setup Github Pages
  #       uses: actions/configure-pages@f156874f8191504dae5b037505266ed5dda6c382 # v3.0.6
  #     - name: Upload documentation artifact
  #       uses: actions/upload-pages-artifact@a753861a5debcf57bf8b404356158c8e1e33150c # v2.0.0
  #       with:
  #         path: pages/
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@9dbe3824824f8a1377b8e298bafde1a50ede43e5 # v2.0.4#      uses: actions/configure-pages@f156874f8191504dae5b037505266ed5dda6c382 # v3.0.6 
